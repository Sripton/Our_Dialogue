import React, { memo } from "react";
import { NavLink } from "react-router-dom";

function Addposts({
  id,
  posttitle,
  inputPostHandler,
  submitPostHandler,
  // filteredPosts,
  postSubjects,
}) {
  console.log("item");
  return (
    <>
      <div className="post-container">
        <div className="post-content">
          <h1 className="post-title">–î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç</h1>
          <div className="post-box">
            <form
              className="form-post"
              onSubmit={(e) => submitPostHandler(e, posttitle)}
            >
              <textarea
                name="posttitle"
                value={posttitle}
                onChange={inputPostHandler}
                placeholder="–û—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –ø–æ—Å—Ç –∑–¥–µ—Å—å..."
                rows="4"
              ></textarea>
              <button id="submit-post" type="submit">
                –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
              </button>
            </form>
          </div>

          <div className="post-info">
            <p>
              –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—É—é —Ç–µ–º—É:
              {/* <span id="reply-count">
                {Array.isArray(filteredPosts) ? filteredPosts.length : 0}
              </span> */}
              <span id="reply-count">{postSubjects.length}</span>
            </p>
            {/* –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <a /> –≤–º–µ—Å—Ç–æ <NavLink/>. –ü—Ä–∏ 
            –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ <a/> –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ª—É—á—à–µ */}
            <NavLink to={`/comments/${id}`} className="view-comments">
              –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–±—Å—É–∂–¥–µ–Ω–∏—é
            </NavLink>
          </div>
        </div>
      </div>
    </>
  );
}

// function areEqual(prevProps, nextProps) {
//   return (
//     prevProps.id === nextProps.id &&
//     prevProps.posttitle === nextProps.posttitle &&
//     prevProps.inputPostHandler === nextProps.inputPostHandler &&
//     prevProps.submitPostHandler === nextProps.submitPostHandler &&
//     prevProps.postSubjects.length === nextProps.postSubjects.length
//   );
// }
function areEqual(prevProps, nextProps) {
  const comparison = {
    idEqual: prevProps.id === nextProps.id,
    posttitleEqual: prevProps.posttitle === nextProps.posttitle,
    inputPostHandlerEqual:
      prevProps.inputPostHandler === nextProps.inputPostHandler,
    submitPostHandlerEqual:
      prevProps.submitPostHandler === nextProps.submitPostHandler,
    postSubjectsEqual: prevProps.postSubjects === nextProps.postSubjects,
  };

  console.log("üîç areEqual comparison", comparison);

  return (
    comparison.idEqual &&
    comparison.posttitleEqual &&
    comparison.inputPostHandlerEqual &&
    comparison.submitPostHandlerEqual &&
    comparison.postSubjectsEqual
  );
}

export default memo(Addposts, areEqual);
